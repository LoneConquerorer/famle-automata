{"version":3,"sources":["components/game/Square/Square.js","components/game/Board/Board.js","components/game/Game/Game.js","api/api.js","components/input/Input.js","components/message/Message.js","components/messages/Messages.js","components/tempo/Tempo.js","components/game/GamePage.js","components/join/Join.js","App.js","index.js"],"names":["Square","props","state","instruments","c","this","preview","cell","note","className","onClick","onMouseDown","mouseDown","onMouseEnter","mouseEnter","onMouseUp","mouseUpContext","onContextMenu","nextProps","nextState","playNote","renderColor","React","Component","Board","i","key","cells","notes","type","rowCount","rows","colCount","cols","Array","map","x","rowIndex","y","colIndex","renderSquare","Game","Tone","Transport","start","Master","volume","value","socket","cb","emit","initBoard","setState","on","t","tempoUpdate","bpm","loc","previewUpdate","temp","slice","notesUpdate","remove","cellsUpdate","temp1","length","arr","previewClose","notesCleared","fill","cellsCleared","xIsNext","stepNumber","sounds","Map","octaves","Math","ceil","pitches","mouseClicked","mouseValue","timestamp","mouseStatus","updateValue","click","clickType","previewClick","updateNotes","handleToggle","context","resume","seconds","row","floor","col","invert","octave","pitch","duration","inst","panVol","PanVol","pan","Synth","toString","AMSynth","FMSynth","DuoSynth","MembraneSynth","chain","triggerAttackRelease","handleClick","handleMouseDown","handleMouseEnter","handleMouseUpContext","Input","message","setMessage","sendMessage","onChange","event","target","onKeyPress","Message","user","text","isSentByCurrentUser","trimmedName","name","trim","toLowerCase","Messages","messages","Tempo","tempo","setTempo","sendTempo","io","GamePage","location","useState","setName","setClick","setMessages","useEffect","queryString","parse","search","e","console","log","off","preventDefault","StartAudioContext","Join","placeholder","to","App","basename","process","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9638e5a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Square.scss\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruments: [\n        \"\",\n        \"synth \",\n        \"amsynth \",\n        \"fmsynth \",\n        \"mono \",\n        \"duo \",\n        \"kick \"\n      ]\n    };\n  }\n  renderColor() {\n    let c = \"square \";\n    if (this.props.preview) c += \"preview \";\n    if (this.props.cell) c += \"cell \";\n    if (this.props.note) c += this.state.instruments[this.props.note];\n\n    return (\n      <button\n        className={c}\n        onClick={this.props.onClick}\n        onMouseDown={this.props.mouseDown}\n        onMouseEnter={this.props.mouseEnter}\n        onMouseUp={this.props.mouseUpContext}\n        onContextMenu={this.props.mouseUpContext}\n      ></button>\n    );\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.preview !== this.props.preview) {\n      return true;\n    } else if (nextProps.cell !== this.props.cell) {\n      return true;\n    } else if (nextProps.note !== this.props.note) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    if (this.props.note && this.props.cell && !this.props.preview) {\n      this.props.playNote(this.props.note);\n    }\n    return <div className=\"squareContainer\">{this.renderColor()}</div>;\n  }\n}\n","import React from \"react\";\nimport Square from \"../Square/Square.js\";\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={i}\n        cell={this.props.cells[i]}\n        preview={this.props.preview[i]}\n        note={this.props.notes[i]}\n        // onClick={() => this.props.onClick(i)}\n        mouseDown={() => this.props.mouseDown(i)}\n        mouseEnter={() => this.props.mouseEnter(i)}\n        mouseUpContext={() => this.props.mouseUpContext()}\n        playNote={type => this.props.playNote(i, type)}\n      />\n    );\n  }\n\n  render() {\n    const rowCount = this.props.rows,\n      colCount = this.props.cols;\n    return (\n      <div className=\"game-board\">\n        {[...new Array(rowCount)].map((x, rowIndex) => {\n          return (\n            <div className=\"board-row\" key={rowIndex}>\n              {[...new Array(colCount)].map((y, colIndex) =>\n                this.renderSquare(rowIndex * colCount + colIndex)\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Tone from \"tone\";\nimport Board from \"../Board/Board.js\";\nimport {\n  initBoard,\n  previewClick,\n  updateNotes,\n  tempoUpdate,\n  previewUpdate,\n  notesUpdate,\n  cellsUpdate,\n  previewClose,\n  notesCleared,\n  cellsCleared\n} from \"../../../api/api.js\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    Tone.Transport.start();\n    Tone.Master.volume.value = -30;\n\n    initBoard(this.props.socket, ({ preview, cells, notes }) =>\n      this.setState({ preview, cells, notes })\n    );\n\n    tempoUpdate(this.props.socket, t => {\n      Tone.Transport.bpm.value = t;\n    });\n\n    previewUpdate(this.props.socket, (loc, value) => {\n      let temp = this.state.preview.slice();\n      temp[loc] = value;\n\n      this.setState({ preview: temp });\n    });\n\n    notesUpdate(this.props.socket, (loc, type, value) => {\n      let temp = this.state.notes.slice();\n      if (temp[loc] === type) {\n        temp[loc] = value;\n      } else {\n        temp[loc] = value ? value : temp[loc];\n      }\n      this.setState({ notes: temp });\n    });\n\n    cellsUpdate(this.props.socket, (remove, cells) => {\n      let temp1 = this.state.preview.slice();\n      for (let i = 0; i < remove.length; i++) {\n        temp1[remove[i]] = 0;\n      }\n      this.setState({ cells: cells, preview: temp1 });\n    });\n\n    previewClose(this.props.socket, arr => {\n      if (arr) {\n        let temp = this.state.preview.slice();\n        for (let i = 0; i < arr.length; i++) {\n          temp[arr[i]] = 0;\n        }\n        this.setState({ preview: temp });\n      }\n    });\n\n    notesCleared(this.props.socket, () => {\n      this.setState({\n        notes: Array(this.props.rows * this.props.cols).fill(0)\n      });\n    });\n\n    cellsCleared(this.props.socket, () => {\n      this.setState({\n        cells: Array(this.props.rows * this.props.cols).fill(0)\n      });\n    });\n\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      rows: this.props.rows,\n      cols: this.props.cols,\n      socket: this.props.socket,\n      preview: Array(this.props.rows * this.props.cols).fill(0),\n      cells: Array(this.props.rows * this.props.cols).fill(0),\n      notes: Array(this.props.rows * this.props.cols).fill(0),\n      sounds: new Map(), // maps location to type\n      octaves: Math.ceil(this.props.rows / 7),\n      pitches: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"],\n      mouseClicked: false,\n      mouseValue: null,\n      timestamp: 0\n    };\n  }\n\n  handleToggle(i, mouseStatus, updateValue) {\n    const click = this.props.clickType;\n\n    if (click === 0) {\n      // click is a cell click; send to preview\n\n      let temp = this.state.preview;\n      if (updateValue) {\n        temp[i] = temp[i] ? 0 : 1;\n        this.setState({\n          preview: temp,\n          mouseClicked: mouseStatus,\n          mouseValue: temp[i]\n        });\n      } else {\n        temp[i] = this.state.mouseValue;\n        this.setState({\n          preview: temp,\n          mouseClicked: mouseStatus\n        });\n      }\n      previewClick(this.props.socket, { loc: i, value: temp[i] });\n    } else {\n      // click is a note click; send to notes\n\n      let temp = this.state.notes.slice();\n      if (updateValue) {\n        temp[i] = temp[i] === click ? 0 : click;\n        this.setState({\n          notes: temp,\n          mouseClicked: mouseStatus,\n          mouseValue: temp[i]\n        });\n      } else {\n        if (temp[i] === click) {\n          temp[i] = this.state.mouseValue;\n        } else {\n          temp[i] = this.state.mouseValue ? this.state.mouseValue : temp[i];\n        }\n        this.setState({\n          notes: temp,\n          mouseClicked: mouseStatus\n        });\n      }\n      updateNotes(this.props.socket, { loc: i, type: click, value: temp[i] });\n    }\n  }\n\n  handleClick(i) {\n    this.handleToggle(i, false, false);\n  }\n\n  handleMouseDown(i) {\n    this.handleToggle(i, true, true);\n    // console.log(this.state.mouseClicked);\n  }\n\n  handleMouseEnter(i) {\n    if (this.state.mouseClicked) {\n      this.handleToggle(i, true, false);\n    }\n    // console.log(this.state.mouseClicked);\n  }\n\n  handleMouseUpContext() {\n    this.setState({ mouseClicked: false, mouseValue: null });\n    // console.log(this.state.mouseClicked);\n  }\n\n  playNote(i, type) {\n    if (Tone.Transport.state !== \"started\") {\n      Tone.Transport.start();\n      return;\n    }\n    if (Tone.context.state !== \"running\") {\n      Tone.context.resume();\n    }\n    if (Tone.Transport.seconds < 2) return;\n    // if (this.props.tempo !== Tone.Transport.bpm) {\n    //   Tone.Transport.bpm.value = this.props.tempo;\n    // }\n    const row = Math.floor(i / this.state.cols);\n    const col = i % this.state.cols;\n    const invert = this.state.rows - row - 1; // used for scale going up\n    const octave = Math.floor(invert / this.state.pitches.length);\n    const pitch = invert % this.state.pitches.length;\n    // console.log(this.state.pitches.length);\n    // console.log(i, row, invert, octave, pitch);\n    let note = \"\";\n    let duration = \"4n\";\n    var inst = \"\";\n    const panVol = new Tone.PanVol();\n    panVol.pan.value = col * (2 / (this.state.cols - 1)) - 1;\n\n    switch (type) {\n      case 1: // synth\n        inst = new Tone.Synth();\n        note = this.state.pitches[pitch] + (octave + 2).toString();\n        duration = \"4n\";\n        break;\n      case 2: // AMsynth\n        inst = new Tone.AMSynth();\n        note = this.state.pitches[pitch] + (octave + 2).toString();\n        duration = \"4n\";\n        break;\n      case 3: // FMsynth\n        inst = new Tone.FMSynth();\n        note = this.state.pitches[pitch] + (octave + 2).toString();\n        duration = \"4n\";\n        break;\n      // case 4: // MonoSynth\n      //   inst = new Tone.MonoSynth().toMaster();\n      //   note = this.state.pitches[pitch] + (octave + 2).toString();\n      //   duration = \"4n\";\n      //   break;\n      case 5: // DuoSynth\n        inst = new Tone.DuoSynth();\n        note = this.state.pitches[pitch] + (octave + 2).toString();\n        duration = \"4n\";\n        break;\n      case 6: // Bass/Kick\n        inst = new Tone.MembraneSynth();\n        note = this.state.pitches[pitch] + octave.toString();\n        duration = \"1n\";\n        break;\n      default:\n        break;\n    }\n\n    if (note !== \"\" && duration !== \"\" && inst !== \"\") {\n      // console.log(note, duration);\n      inst.chain(panVol, Tone.Master);\n      inst.triggerAttackRelease(note, duration);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board-container\">\n          <Board\n            preview={this.state.preview}\n            cells={this.state.cells}\n            notes={this.state.notes}\n            onClick={i => this.handleClick(i)}\n            mouseDown={i => this.handleMouseDown(i)}\n            mouseEnter={i => this.handleMouseEnter(i)}\n            mouseUpContext={() => this.handleMouseUpContext()}\n            playNote={(i, type) => this.playNote(i, type)}\n            rows={this.state.rows}\n            cols={this.state.cols}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export function subscribeToTimer(socket, cb) {\n  socket.emit(\"subscribeToTimer\");\n}\n\nexport function changeTempo(socket, tempo) {\n  socket.emit(\"tempoChange\", tempo);\n}\n\nexport function initBoard(socket, cb) {\n  socket.emit(\"boardInit\", cb);\n}\n\nexport function previewClick(socket, { loc, value }) {\n  socket.emit(\"previewClick\", { loc, value });\n}\n\n// sends note updates\nexport function updateNotes(socket, { loc, type, value }) {\n  socket.emit(\"updateNotes\", { loc, type, value });\n}\n\n// gets preview updates\nexport function tempoUpdate(socket, cb) {\n  socket.on(\"tempo\", t => cb(t));\n}\n\n// gets preview updates\nexport function previewUpdate(socket, cb) {\n  socket.on(\"previewUpdate\", ({ loc, value }) => cb(loc, value));\n}\n\n// gets note updates\nexport function notesUpdate(socket, cb) {\n  socket.on(\"notesUpdate\", ({ loc, type, value }) => cb(loc, type, value));\n}\n\n//gets cell updates\nexport function cellsUpdate(socket, cb) {\n  socket.on(\"cellsUpdate\", ({ remove, cells }) => cb(remove, cells));\n}\n\nexport function previewClose(socket, cb) {\n  socket.on(\"previewClose\", ({ arr }) => cb(arr));\n}\n\n// clears all notes\nexport function notesCleared(socket, cb) {\n  socket.on(\"notesCleared\", () => cb());\n}\n\n// clears all cells\nexport function cellsCleared(socket, cb) {\n  socket.on(\"cellsCleared\", () => cb());\n}\n","import React from \"react\";\nimport \"./Input.css\";\n\nconst Input = ({ message, setMessage, sendMessage }) => (\n  <form className=\"form\">\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={message}\n      onChange={event => setMessage(event.target.value)}\n      onKeyPress={event => (event.key === \"Enter\" ? sendMessage(event) : null)}\n    />\n    <button className=\"sendButton\" onClick={event => sendMessage(event)}>\n      Send\n    </button>\n  </form>\n);\n\nexport default Input;\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({ message: { user, text }, name }) => {\n  let isSentByCurrentUser = false;\n\n  const trimmedName = name.trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer justifyStart\">\n      <div className=\"nameBox\">\n        <p className=\"colorWhite\">{trimmedName}:</p>\n      </div>\n      <div className=\"messageBox backgroundPurple\">\n        <p className=\"messageText colorWhite\">{text}</p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"messageContainer justifyStart\">\n      <div className=\"nameBox\">\n        <p className=\"colorWhite\">{user}:</p>\n      </div>\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText colorDark\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Message from \"../message/Message.js\";\nimport \"./Messages.css\";\n\nconst Messages = ({ messages, name }) => (\n  <ScrollToBottom className=\"messages\">\n    {messages.map((message, i) => (\n      <div key={i}>\n        <Message message={message} name={name} />\n      </div>\n    ))}\n  </ScrollToBottom>\n);\n\nexport default Messages;\n","import React from \"react\";\nimport \"./Tempo.css\";\n\nconst Tempo = ({ tempo, setTempo, sendTempo }) => (\n  <form className=\"tempo-form\">\n    <input\n      className=\"tempo\"\n      type=\"number\"\n      value={tempo}\n      onChange={event => setTempo(event.target.value)}\n      onKeyPress={event => (event.key === \"Enter\" ? sendTempo(event) : null)}\n    />\n    <button className=\"tempoButton\" onClick={event => sendTempo(event)}>\n      Set Tempo\n    </button>\n  </form>\n);\n\nexport default Tempo;\n","import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport StartAudioContext from \"startaudiocontext\";\nimport Tone from \"tone\";\nimport io from \"socket.io-client\";\n\nimport \"./Chat.css\";\nimport Game from \"./Game/Game.js\";\nimport Input from \"../input/Input.js\";\nimport Messages from \"../messages/Messages.js\";\nimport Tempo from \"../tempo/Tempo.js\";\n\nconst ENDPOINT = \"https://famle-automata.herokuapp.com/\";\nlet socket = io(ENDPOINT);\n\nconst GamePage = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tempo, setTempo] = useState(\"0\");\n  const [click, setClick] = useState(0);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const name = queryString.parse(location.search);\n    setName(name.name);\n\n    socket.emit(\"join\", name, e => {\n      console.log(e);\n    });\n\n    socket.emit(\"subscribeToTimer\", tempo => setTempo(tempo));\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [location.search]);\n\n  useEffect(() => {\n    // updates\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n\n    socket.on(\"tempo\", tempo => {\n      setTempo(tempo);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  const sendTempo = event => {\n    event.preventDefault();\n\n    if (tempo) {\n      socket.emit(\"tempoChange\", tempo);\n    }\n  };\n\n  const pushPreview = event => {\n    socket.emit(\"previewPush\");\n  };\n\n  const clearNotes = () => {\n    socket.emit(\"clearNotes\");\n  };\n\n  const clearCells = () => {\n    socket.emit(\"clearCells\");\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"left-container\">\n        <Game rows={28} cols={50} socket={socket} clickType={click} />\n      </div>\n      <div className=\"right-container\">\n        <div className=\"right-top-container\">\n          <Messages messages={messages} name={name} />\n          <Input\n            message={message}\n            setMessage={setMessage}\n            sendMessage={sendMessage}\n          />\n        </div>\n        <div className=\"right-bottom-container\">\n          <div className=\"tempo-text\">Tempo</div>\n          <div className=\"tempo-align\">\n            <Tempo tempo={tempo} setTempo={setTempo} sendTempo={sendTempo} />\n          </div>\n          <div>\n            <button\n              className=\"preview cell-button\"\n              onClick={event => setClick(0)}\n            >\n              cells\n            </button>\n            <button\n              className=\"cell push-button\"\n              onClick={event => pushPreview()}\n            >\n              push changes\n            </button>\n          </div>\n          <div className=\"button-layers\">\n            <div>\n              <button\n                className=\"synth-button note-button\"\n                onClick={event => setClick(1)}\n              >\n                Synth\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"amsynth-button note-button\"\n                onClick={event => setClick(2)}\n              >\n                AMSynth\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"fmsynth-button note-button\"\n                onClick={event => setClick(3)}\n              >\n                FMSynth\n              </button>\n            </div>\n            <div>\n              {/* <button className=\"mono\" onClick={event => setClick(4)}>\n              MonoSynth\n            </button> */}\n            </div>\n            <div>\n              <button\n                className=\"duo-button note-button\"\n                onClick={event => setClick(5)}\n              >\n                DuoSynth\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"kick-button note-button\"\n                onClick={event => setClick(6)}\n              >\n                Bass/Kick\n              </button>\n            </div>\n          </div>\n          <div className=\"settings-layer\">\n            <div className=\"bottom-div-half\"></div>\n            <div className=\"bottom-div-half\">\n              <button\n                className=\"preview cell-button\"\n                onClick={event => StartAudioContext(Tone.context)}\n              >\n                Start Sound\n              </button>\n              <button\n                className=\"clear-button  center-button\"\n                onClick={event => clearCells()}\n              >\n                Clear Cells\n              </button>\n              <button\n                className=\"clear-button  push-button\"\n                onClick={event => clearNotes()}\n              >\n                Clear Notes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Join.css\";\n\nconst Join = () => {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <div className=\"joinInnerContainer\">\n        <h1 className=\"heading\">FaMLE;Automata</h1>\n        <div>\n          <input\n            placeholder=\"Username\"\n            className=\"joinInput\"\n            type=\"text\"\n            onChange={event => setName(event.target.value)}\n          />\n        </div>\n        <Link\n          onClick={event => (!name ? event.preventDefault() : null)}\n          to={`/game?name=${name}`}\n        >\n          <button className=\"button mt-20\" type=\"submit\">\n            Join\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport GamePage from \"./components/game/GamePage.js\";\nimport Join from \"./components/join/Join\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Route path=\"/\" exact component={Join} />\n    <Route path=\"/game\" component={GamePage} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}